services:
  order-service-db:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    networks:
      - my-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-network

  myapp:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - order-service-db
      - kafka
    networks:
      - my-network
    environment:
      CONFIG_PATH: "/root/configs/config.yaml"
      DATABASE_URL: postgres://postgres:admin@order-service-db:5432/postgres?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: orders

  migrator:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    depends_on:
      - order-service-db
    networks:
      - my-network
    command: [ "-path", "/migrations", "-database", "postgres://postgres:admin@order-service-db:5432/postgres?sslmode=disable", "up" ]

  kafka-publisher:
    image: golang:1.22-alpine3.18
    working_dir: /app
    volumes:
      - .:/app
    command: go run cmd/kafka/publisher.go
    depends_on:
      - kafka
    networks:
      - my-network
    environment:
      KAFKA_BROKERS: "kafka:9092"

volumes:
  postgres-data:

networks:
  my-network:
    driver: bridge